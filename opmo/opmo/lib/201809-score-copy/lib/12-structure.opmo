;;;---------------------------------------------------------
;;; AB88
;;; Copyright © 2018 Achim Bornhoeft
;;;---------------------------------------------------------

(load (merge-pathnames "functions.lisp" *load-truename*))
(load (merge-pathnames "global.opmo" *load-truename*))

;;;---------------------------------------------------------
;;; Initialisation
;;;---------------------------------------------------------

(setf size 8)
(setf bars (gen-repeat size '(4/4)))
(setf pause (length-span bars '(-w)))

(setf piano1-1-rh pause piano1-1-lh pause piano1-2-rh pause piano1-2-lh pause 
      piano1-3-rh pause piano1-3-lh pause piano2-1-rh pause piano2-1-lh pause
      piano2-2-rh pause piano2-2-lh pause piano2-3-rh pause piano2-3-lh pause)

;;;---------------------------------------------------------
;;; Parameters
;;;---------------------------------------------------------

;;; Pitches

;; (pattern-map '((1 0) 2) (gen-binary-euclidean 1 14 8 8)) => (2 1 2 2 2 1 2 2)

(defparameter intervals-left '(-2 -1 -2 -2))
(defparameter intervals-right '(2 1 2 2))

;; ambitus-hands see. global.opmo
;; ((105 98) (98 91) (77 70) (70 63) (49 42) (42 35) (91 84) (84 77) (63 56) (56 49) (35 28) (28 21))

(defparameter all-chords
  (midi-to-pitch
  (loop for i in ambitus-hands
    for j from 0
    if (evenp j)
    collect (dx-x intervals-right (first (last i)))
    if (oddp j)
    collect (dx-x intervals-left (first i)))))

(defun chord-dissolve (chord)
(let* ((id-len-chord (- (length chord) 1)))
  (loop for i from 0 to id-len-chord append
    (chordize (loop for j from i to id-len-chord 
                collect (nth j chord))))))

;; (chord-dissolve '(c4 d4 e4 f4 g4)) 
;; (chord-dissolve (first all-chords))

(defun dissolve-omn (reps chord seed)
(loop repeat reps
 initially (rnd-seed seed)
  collect (butlast (make-omn :length (a/x 16 
                       (rnd-sum-to-size 
                        16 (length chord) '(1 2 3 4 5 6 7 8) :seed (seed)))
          :pitch (chord-dissolve chord)
          :articulation (gen-repeat (- (length chord) 1) 'tie)))))

;; (dissolve-omn 10 '(c4 d4 e4 f4 g4) 123)

(defparameter dissolved-voices
  (loop for i in all-chords
    initially (rnd-seed 123)
    collect (flatten (dissolve-omn 10 i (seed)))))

;;;---------------------------------------------------------
;;; Parts
;;;---------------------------------------------------------

(setf all-voices
      (set-assignment 'voice dissolved-voices))
       
(setf piano1-1-rh voice0 piano1-2-rh voice2 piano1-3-rh voice4
      piano2-1-rh voice6 piano2-2-rh voice8 piano2-3-rh voice10)

(setf piano1-1-lh voice1 piano1-2-lh voice3 piano1-3-lh voice5
      piano2-1-lh voice7 piano2-2-lh voice9 piano2-3-lh voice11)

;;;---------------------------------------------------------
;;; Score and Layout
;;;---------------------------------------------------------

(def-score dissolve-rhythm
           (:title
            "AB88"
            :composer "Achim Bornhoeft"
            :copyright "Copyright © 2018"
            :key-signature 'chromatic
            :time-signature '((1 1 1 1) 4)
            :tempo 80
            :flexible-clef t
            :octave-shift t
            :accidentals :cautionary
            :layout 
            (list
             (bracket-group
              (piano-layout 'piano1-1-rh 'piano1-1-lh :name "Piano 1.1" :abbr "Pno 1.1")
              (piano-layout 'piano1-2-rh 'piano1-2-lh :name "Piano 1.2" :abbr "Pno 1.2")
              (piano-layout 'piano1-3-rh 'piano1-3-lh :name "Piano 1.3" :abbr "Pno 1.3"))
             (bracket-group
              (piano-layout 'piano2-1-rh 'piano2-1-lh :name "Piano 2.1" :abbr "Pno 2.1")
              (piano-layout 'piano2-2-rh 'piano2-2-rh :name "Piano 2.2" :abbr "Pno 2.2")
              (piano-layout 'piano2-3-rh 'piano2-3-lh :name "Piano 2.3" :abbr "Pno 2.3"))))
  
  ;;; Piano I
  
  (piano1-1-rh :omn piano1-1-rh :channel 1 :sound 'gm :program 0 :pan 32)  
  (piano1-1-lh :omn piano1-1-lh :channel 2 :pan 32)
  
  (piano1-2-rh :omn piano1-2-rh :channel 3 :pan 32)
  (piano1-2-lh :omn piano1-2-lh :channel 4 :pan 32)
  
  (piano1-3-rh :omn piano1-3-rh :channel 5 :pan 32)
  (piano1-3-lh :omn piano1-3-lh :channel 6 :pan 32)
  
  ;;; Piano II
  
  (piano2-1-rh :omn piano2-1-rh :channel 7 :pan 96)
  (piano2-1-lh :omn piano2-1-lh :channel 8 :pan 96)
  
  (piano2-2-rh :omn piano2-2-rh :channel 9 :pan 96)
  (piano2-2-lh :omn piano2-2-lh :channel 13 :pan 96)
  
  (piano2-3-rh :omn piano2-3-rh :channel 14 :pan 96)
  (piano2-3-lh :omn piano2-3-lh :channel 15 :pan 96)
  )

(display-musicxml 'dissolve-rhythm)
(display-midi 'dissolve-rhythm) 