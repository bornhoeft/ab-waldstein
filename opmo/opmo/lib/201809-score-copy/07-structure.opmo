;;;---------------------------------------------------------
;;; AB88 - Waldstein
;;; Copyright © 2018 Achim Bornhoeft
;;;
;;; Structure 7
;;;
;;; Field of higher pitches with indepentent accents (6 voices)
;;;---------------------------------------------------------

(load (merge-pathnames "functions.lisp" *load-truename*))
(load (merge-pathnames "global.opmo" *load-truename*))

;;;---------------------------------------------------------
;;; Initialisation
;;;---------------------------------------------------------

(setf size 4)
(setf bars (gen-repeat size '(4/4)))
(setf pause (length-span bars '(-w)))

(setf piano1-1-rh pause piano1-1-lh pause piano1-2-rh pause piano1-2-lh pause 
      piano1-3-rh pause piano1-3-lh pause piano2-1-rh pause piano2-1-lh pause
      piano2-2-rh pause piano2-2-lh pause piano2-3-rh pause piano2-3-lh pause)

;;;---------------------------------------------------------
;;; Parameters
;;;---------------------------------------------------------

(defparameter first-pitches
(mapcar #'first
(list pitches-piano2-2-rh   
      pitches-piano1-2-lh pitches-piano1-2-rh
      pitches-piano2-1-lh pitches-piano2-1-rh 
      pitches-piano1-1-lh)))

;; (midi-to-pitch first-pitches)
 
(defparameter intervals
  '((2 2 1 2) 
    (2 2 1 2) (2 1 2 2)
    (2 1 2 2) (1 2 2 2)
    (1 2 2 2)))

(defparameter chords
  (loop for i in intervals
    for j in first-pitches
    collect (dx-x i j)))
       
;; (midi-to-pitch chords)

(defparameter duration (gen-repeat (* 20 4 )  (/ 1 4 5)))

(defparameter all-durations
  (loop repeat 6 collect duration))

(defparameter groupings 
  (gen-eval 6 '(rnd-sum-to-size (length duration) 8 '(7 8 9 10 11 12)) :seed 15))

(defparameter group-durations
  (loop for i in groupings
    collect
    (gen-divide i duration)))

(defparameter  all-articulations
  (loop for i in group-durations 
    collect 
    (loop for j in i collect
      'marc
      append (gen-repeat (length (cdr j)) '-))))

;; (length all-articulations)

(defparameter all-velocities
  (loop for i in group-durations 
    collect
    (loop for j in i collect
      'mf
      append (gen-repeat (length (cdr j)) 'pp))))

(defparameter all-pitches
  (loop for i in chords
    initially (init-seed 345)
  collect (rnd-sample (length (flatten all-durations)) i :norep t :seed (seed))))

;;;---------------------------------------------------------
;;; Parts
;;;---------------------------------------------------------

(setf all-voices
      (set-assignment 'voice
        (make-omn
         :pitch (midi-to-pitch all-pitches)
         :length all-durations
         :velocity all-velocities
         :articulation all-articulations)))

(setf piano1-3-rh voice0
      piano2-2-rh voice1 piano1-2-rh voice2
      piano2-1-lh voice3 piano2-1-rh voice4
      piano1-1-rh voice5)

;;;---------------------------------------------------------
;;; Score and Layout
;;;---------------------------------------------------------

(def-score accent-pitches-2
           (:title "AB88"
                   :composer "Achim Bornhoeft"
                   :copyright "Copyright © 2018"
                   :key-signature 'chromatic
                   :time-signature '((1 1 1 1) 4)
                   :tempo 80
                   :layout 
                   (list
                    (bracket-group
                     (brace-group 
                      (treble-layout 'piano1-1-rh) 
                      (treble-layout 'piano1-1-lh) :name "Piano 1.1" :abbr "Pno 1.1")
                     (brace-group
                      (treble-layout 'piano1-2-rh) 
                      (treble-layout 'piano1-2-lh) :name "Piano 1.2" :abbr "Pno 1.2")
                     (brace-group
                      (bass-layout 'piano1-3-rh) 
                      (bass-layout 'piano1-3-lh) :name "Piano 1.3" :abbr "Pno 1.3"))
                    (bracket-group
                     (brace-group
                      (treble-layout 'piano2-1-rh)
                      (treble-layout 'piano2-1-lh) :name "Piano 2.1" :abbr "Pno 2.1")
                     (brace-group
                      (treble-layout 'piano2-2-rh) 
                      (bass-layout 'piano2-2-lh) :name "Piano 2.2" :abbr "Pno 2.2")
                     (brace-group
                      (bass-layout 'piano2-3-rh)
                      (bass-layout'piano2-3-lh) :name "Piano 2.3" :abbr "Pno 2.3"))))	
  
  ;;; Piano I
  
  (piano1-1-rh :omn piano1-1-rh :channel 1 :pan 32)  
  (piano1-1-lh :omn piano1-1-lh :channel 2 :pan 32)
  
  (piano1-2-rh :omn piano1-2-rh :channel 3 :pan 32)
  (piano1-2-lh :omn piano1-2-lh :channel 4 :pan 32)
  
  (piano1-3-rh :omn piano1-3-rh :channel 5 :pan 32)
  (piano1-3-lh :omn piano1-3-lh :channel 6 :pan 32)
  
  ;;; Piano II
  
  (piano2-1-rh :omn piano2-1-rh :channel 7 :pan 96)
  (piano2-1-lh :omn piano2-1-lh :channel 8 :pan 96)
  
  (piano2-2-rh :omn piano2-2-rh :channel 9 :pan 96)
  (piano2-2-lh :omn piano2-2-lh :channel 11 :pan 96)
  
  (piano2-3-rh :omn piano2-3-rh :channel 12 :pan 96)
  (piano2-3-lh :omn piano2-3-lh :channel 13 :pan 96))

(display-musicxml 'accent-pitches-2)
(display-midi 'accent-pitches-2)